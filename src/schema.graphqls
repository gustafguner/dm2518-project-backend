schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Query {
  user(username: String): User
  conversation: Conversation
  conversations: [Conversation]
}

type Mutation {
  createUser(input: CreateUserInput!): AuthResponse
  createConversation(username: String!): Conversation
  sendMessage(input: SendMessageInput!): Boolean!
  login(input: LoginInput!): AuthResponse
}

type Subscription {
  chatMessage(conversationId: ID!): Message
}

type User {
  id: ID!
  username: String!
  publicKey: String!
}

type Conversation {
  id: ID!
  from: ID!
  to: ID!
  messages: [Message]
}

type Message {
  body: String!
  author: User!
  timestamp: String!
}

type AuthResponse {
  user: User
  token: String
}

input CreateUserInput {
  username: String!
  publicKey: String!
  password: String!
}

input LoginInput {
  username: String!
  password: String!
}

input SendMessageInput {
  authorId: ID!
  conversationId: ID!
  body: String!
}
